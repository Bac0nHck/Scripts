-- // t.me/arceusxscripts

local lib = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()

local Window = lib:CreateWindow{
    Title = "Be NPC or Die | Peppermint Farm",
    SubTitle = "by t.me/arceusxscripts",
    TabWidth = 140,
    Size = UDim2.fromOffset(600, 425),
    Resize = true, 
    MinSize = Vector2.new(470, 380),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
}

local Tabs = {
    Main = Window:CreateTab{
        Title = "Farm Tab",
        Icon = "circle-dollar-sign"
    },
    Settings = Window:CreateTab{
        Title = "Settings",
        Icon = "settings"
    }
}

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
local plr = Players.LocalPlayer

local function getCharacter()
    local char = plr.Character or plr.CharacterAdded:Wait()
    local humPart = char:WaitForChild("HumanoidRootPart", 5)
    return char, humPart
end

local char, humPart = getCharacter()

plr.CharacterAdded:Connect(function()
    char, humPart = getCharacter()
end)

local collect = workspace:FindFirstChild("CollectableItems")

-- Anti AFK
local bb = game:GetService("VirtualUser")
plr.Idled:connect(function()
    bb:CaptureController()
    bb:ClickButton2(Vector2.new())
end)

-- Server Hop Function
local function serverHop()
    local servers = {}
    local req = request({
        Url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true",
        Method = "GET"
    })

    if req.StatusCode == 200 then
        local body = HttpService:JSONDecode(req.Body)
        if body and body.data then
            for _, server in ipairs(body.data) do
                if server.playing < server.maxPlayers and server.id ~= game.JobId then
                    table.insert(servers, server.id)
                end
            end
        end
    else
        warn("Failed to fetch server list: " .. req.StatusMessage)
    end

    if #servers > 0 then
        TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], plr)
    else
        warn("No suitable servers found")
    end
end

local farm = Tabs.Main:CreateToggle("Farm", {Title = "Toggle Farm", Default = false })

local resetParagraph = Tabs.Main:CreateParagraph("Reset", {
    Title = "Auto Reset:",
    Content = ""
})

local full = Tabs.Main:CreateToggle("Full", {Title = "Reset if the Bag is Full", Default = false })
local sheriff  = Tabs.Main:CreateToggle("Sheriff", {Title = "Reset if You are a Sheriff", Default = false })

local serverParagraph = Tabs.Main:CreateParagraph("ServerHop", {
    Title = "Server Hop:",
    Content = ""
})

Tabs.Main:CreateButton{
    Title = "Server Hop",
    Description = "",
    Callback = function()
        Window:Dialog{
            Title = "Server Hop",
            Content = "Do you want to server hop?",
            Buttons = {
                {
                    Title = "Confirm",
                    Callback = function()
                        serverHop()
                    end
                },
                {
                    Title = "Cancel",
                    Callback = function() end
                }
            }
        }
    end
}

local serverhop = Tabs.Main:CreateToggle("Serverhop", {Title = "Auto Server Hop", Default = false })

-- Farming Logic
farm:OnChanged(function()
    if farm.Value then
        while farm.Value do
            for _, p in ipairs(collect:GetChildren()) do
                if not farm.Value then break end
                if p:IsA("BasePart") and string.find(p.Name, "Peppermint") then
                    humPart.CFrame = p.CFrame
                    task.wait(0.5)
                    local humanoid = char:FindFirstChildWhichIsA("Humanoid")
                    if humanoid then humanoid:ChangeState(Enum.HumanoidStateType.Jumping) end
                    task.wait(1)
                end
            end
            task.wait(1)
        end
    end
end)

-- Full Bag Logic
full:OnChanged(function()
    if full.Value and farm.Value then
        local bag = plr:FindFirstChild("PlayerGui"):FindFirstChild("Timer")
                        :FindFirstChild("Frame"):FindFirstChild("Bags")
                        :FindFirstChild("PeppermintBag") and plr.PlayerGui.Timer.Frame.Bags.PeppermintBag.Bag:FindFirstChild("AmountCollected")
        if bag then
            while full.Value do
                if bag.Text == "FULL!" and plr.Team and plr.Team.Name == "Criminals" then
                    local humanoid = char:FindFirstChildWhichIsA("Humanoid")
                    if humanoid then humanoid.Health = 0 end
                end
                task.wait(1)
            end
        end
    end
end)

-- Sheriff Logic
sheriff:OnChanged(function()
    if sheriff.Value and farm.Value then
        while sheriff.Value do
            if plr.Team and plr.Team.Name == "Sheriffs" then
                local humanoid = char:FindFirstChildWhichIsA("Humanoid")
                if humanoid then humanoid.Health = 0 end
            end
            task.wait(1)
        end
    end
end)

-- Auto Server Hop Logic
serverhop:OnChanged(function()
    if serverhop.Value then
        while serverhop.Value do
            if #Players:GetPlayers() <= 3 then
                serverHop()
            end
            task.wait(1)
        end
    end
end)
local hopParagraph = Tabs.Main:CreateParagraph("AutoHop", {
    Title = "^ If there are less than 3 players on the server",
    Content = ""
})

local TeleportCheck = false
plr.OnTeleport:Connect(function(State)
	if queueteleport and (not TeleportCheck) then
        TeleportCheck = true
		queueteleport("loadstring(game:HttpGet("https://raw.githubusercontent.com/Bac0nHck/Scripts/refs/heads/main/bnod_ap"))(")
	end
end)

Window:SelectTab(1)

SaveManager:SetLibrary(lib)
InterfaceManager:SetLibrary(lib)
SaveManager:IgnoreThemeSettings()
InterfaceManager:SetFolder("PeppermintsFarm")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
SaveManager:LoadAutoloadConfig()

-- // t.me/arceusxscripts
