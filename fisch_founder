repeat wait() until game:IsLoaded() and game:GetService("Players").LocalPlayer

local plr = game:GetService("Players").LocalPlayer
local queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
local httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")

local PlaceId = game.PlaceId
local JobId = game.JobId

local function notif(msg)
    game:GetService("StarterGui"):SetCore('SendNotification', {
        Title = 'Notification',
        Text = msg,
        Duration = 5
    })
end

local function serverhop()
    if not httprequest then
        notif("HTTP request function not found!")
        return false
    end

    local success, req = pcall(httprequest, {
        Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", PlaceId)
    })

    if not success or not req or not req.Body then
        notif("Failed to fetch server list.")
        return false
    end

    local body = HttpService:JSONDecode(req.Body)
    local servers = {}

    if body and body.data then
        for _, v in pairs(body.data) do
            if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= JobId then
                table.insert(servers, v.id)
            end
        end
    end

    if #servers > 0 then
        local serverId = servers[math.random(1, #servers)]
        local teleportSuccess, teleportError = pcall(function()
            TeleportService:TeleportToPlaceInstance(PlaceId, serverId, plr)
        end)

        if not teleportSuccess then
            notif("Teleport failed. Retrying...")
            return false
        end
        return true
    else
        notif("No available servers found.")
        return false
    end
end

if queueteleport then
    queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/Bac0nHck/Scripts/refs/heads/main/fisch_founder'))()")
end

if (game.PlaceVersion == 3754) or (game.PlaceVersion == 3783) then
    notif("Switching server...")
    repeat
        wait(1)
    until serverhop()
elseif (game.PlaceVersion == 3750) then
    notif("Server found!")
end
